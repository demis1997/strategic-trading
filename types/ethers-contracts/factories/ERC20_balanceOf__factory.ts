/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ERC20_balanceOf,
  ERC20_balanceOfInterface,
} from "../ERC20_balanceOf";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "balance",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ERC20_balanceOf__factory {
  static readonly abi = _abi;
  static createInterface(): ERC20_balanceOfInterface {
    return new Interface(_abi) as ERC20_balanceOfInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20_balanceOf {
    return new Contract(address, _abi, runner) as unknown as ERC20_balanceOf;
  }
}
