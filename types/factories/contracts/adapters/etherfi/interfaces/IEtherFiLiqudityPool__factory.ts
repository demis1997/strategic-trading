/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEtherFiLiqudityPool,
  IEtherFiLiqudityPoolInterface,
} from "../../../../../contracts/adapters/etherfi/interfaces/IEtherFiLiqudityPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEtherFiLiqudityPool__factory {
  static readonly abi = _abi;
  static createInterface(): IEtherFiLiqudityPoolInterface {
    return new Interface(_abi) as IEtherFiLiqudityPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEtherFiLiqudityPool {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IEtherFiLiqudityPool;
  }
}
