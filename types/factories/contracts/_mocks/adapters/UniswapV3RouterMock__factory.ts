/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UniswapV3RouterMock,
  UniswapV3RouterMockInterface,
} from "../../../../contracts/_mocks/adapters/UniswapV3RouterMock";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct UniswapV3RouterMock.ExactOutputParams",
        name: "",
        type: "tuple",
      },
    ],
    name: "exactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "output",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setExactOutput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610118806100206000396000f3fe60806040526004361060305760003560e01c806309b81346146035578063747ca476146059578063f20eaeb8146077575b600080fd5b60476040366004608b565b5060005490565b60405190815260200160405180910390f35b348015606457600080fd5b506075607036600460ca565b600055565b005b348015608257600080fd5b50604760005481565b600060208284031215609c57600080fd5b813567ffffffffffffffff81111560b257600080fd5b82016080818503121560c357600080fd5b9392505050565b60006020828403121560db57600080fd5b503591905056fea2646970667358221220b74d77385eadd450e6f973de73fc3b60e78141b65a4b88e0d8ed448221f8159864736f6c63430008180033";

type UniswapV3RouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3RouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3RouterMock__factory extends ContractFactory {
  constructor(...args: UniswapV3RouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniswapV3RouterMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniswapV3RouterMock__factory {
    return super.connect(runner) as UniswapV3RouterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3RouterMockInterface {
    return new Interface(_abi) as UniswapV3RouterMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV3RouterMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniswapV3RouterMock;
  }
}
