/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EtherFiMock,
  EtherFiMockInterface,
} from "../../../../contracts/_mocks/adapters/EtherFiMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20Mock",
        name: "stETH_",
        type: "address",
      },
      {
        internalType: "contract ERC20Mock",
        name: "eETH_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositWithERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eETH",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160025534801561001557600080fd5b5060405161032138038061032183398101604081905261003491610081565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b61025e806100c36000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630de371e2146100515780639576a0c814610081578063b6f086f414610098578063c1fe3e48146100ab575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008a60025481565b604051908152602001610078565b61008a6100a63660046101c3565b6100be565b600054610064906001600160a01b031681565b600080546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a91906101ff565b506001546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561018757600080fd5b505af115801561019b573d6000803e3d6000fd5b50949695505050505050565b80356001600160a01b03811681146101be57600080fd5b919050565b6000806000606084860312156101d857600080fd5b6101e1846101a7565b9250602084013591506101f6604085016101a7565b90509250925092565b60006020828403121561021157600080fd5b8151801515811461022157600080fd5b939250505056fea26469706673582212201cd2645691691309429c246799d64fdc5644183557428c4edd734321ff549c3864736f6c63430008180033";

type EtherFiMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherFiMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherFiMock__factory extends ContractFactory {
  constructor(...args: EtherFiMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    stETH_: AddressLike,
    eETH_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(stETH_, eETH_, overrides || {});
  }
  override deploy(
    stETH_: AddressLike,
    eETH_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(stETH_, eETH_, overrides || {}) as Promise<
      EtherFiMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EtherFiMock__factory {
    return super.connect(runner) as EtherFiMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherFiMockInterface {
    return new Interface(_abi) as EtherFiMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EtherFiMock {
    return new Contract(address, _abi, runner) as unknown as EtherFiMock;
  }
}
