/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  GenericRouter,
  GenericRouterInterface,
} from "../../../../contracts/_mocks/1InchMock.sol/GenericRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
    ],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMinReturn",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "srcToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dstToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "srcReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct GenericRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e9806100206000396000f3fe60806040526004361061001e5760003560e01c8063b869126414610023575b600080fd5b610036610031366004610629565b61004f565b6040805192835260208301919091520160405180910390f35b600080808061006160208801886106ca565b6001600160a01b031614905080801561007e575085608001353414155b1561009c57604051631841b4e160e01b815260040160405180910390fd5b801580156100a957503415155b156100c757604051631841b4e160e01b815260040160405180910390fd5b8061010357610103336100e06060890160408a016106ca565b60808901356100f260208b018b6106ca565b6001600160a01b03169291906103c3565b6101133387608001358787610430565b92506080860135915060c08601356001161561024c57600061013860208801886106ca565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561017e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a291906106e7565b905060018111156101df57600019016101bb8184610716565b92506101df33826101cf60208b018b6106ca565b6001600160a01b03169190610452565b6101ed8360a0890135610729565b6101fb608089013586610729565b1015610246578360808801356102158560a08b0135610729565b61021f9190610740565b604051630325276360e11b8152600481019290925260248201526044015b60405180910390fd5b5061027e565b8560a0013583101561027e57604051630325276360e11b81526004810184905260a0870135602482015260440161023d565b6000806102916080890160608a016106ca565b6001600160a01b0316146102b4576102af60808801606089016106ca565b6102b6565b335b905060006102ca6040890160208a016106ca565b6001600160a01b031603610314576040516001600160a01b0382169085156108fc029086906000818181858888f1935050505015801561030e573d6000803e3d6000fd5b50610329565b61032981856101cf60408b0160208c016106ca565b61033960608801604089016106ca565b6001600160a01b03166103526040890160208a016106ca565b6001600160a01b031661036860208a018a6106ca565b604080516001600160a01b03868116825260808d013560208301529181018990529116907f28d00b9419287441aad457025bbaa9aaead77e93e2739080543e5261012b0eee9060600160405180910390a45050935093915050565b6040516001600160a01b03848116602483015283811660448301526064820183905261042a9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610488565b50505050565b6000606461043f85605f610729565b6104499190610740565b95945050505050565b6040516001600160a01b0383811660248301526044820183905261048391859182169063a9059cbb906064016103f8565b505050565b600061049d6001600160a01b038416836104eb565b905080516000141580156104c25750808060200190518101906104c09190610762565b155b1561048357604051635274afe760e01b81526001600160a01b038416600482015260240161023d565b60606104f983836000610502565b90505b92915050565b6060814710156105275760405163cd78605960e01b815230600482015260240161023d565b600080856001600160a01b031684866040516105439190610784565b60006040518083038185875af1925050503d8060008114610580576040519150601f19603f3d011682016040523d82523d6000602084013e610585565b606091505b50915091506105958683836105a1565b925050505b9392505050565b6060826105b6576105b1826105fd565b61059a565b81511580156105cd57506001600160a01b0384163b155b156105f657604051639996b31560e01b81526001600160a01b038516600482015260240161023d565b508061059a565b80511561060d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b600080600083850361010081121561064057600080fd5b60e081121561064e57600080fd5b5083925060e084013567ffffffffffffffff8082111561066d57600080fd5b818601915086601f83011261068157600080fd5b81358181111561069057600080fd5b8760208285010111156106a257600080fd5b6020830194508093505050509250925092565b6001600160a01b038116811461062657600080fd5b6000602082840312156106dc57600080fd5b813561059a816106b5565b6000602082840312156106f957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104fc576104fc610700565b80820281158282048414176104fc576104fc610700565b60008261075d57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561077457600080fd5b8151801515811461059a57600080fd5b6000825160005b818110156107a5576020818601810151858301520161078b565b50600092019182525091905056fea264697066735822122025fe9408f3120aedf6f60b950e4a83c19b8bbe8d534ec41f04399f13c52a82e364736f6c63430008180033";

type GenericRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericRouter__factory extends ContractFactory {
  constructor(...args: GenericRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GenericRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GenericRouter__factory {
    return super.connect(runner) as GenericRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericRouterInterface {
    return new Interface(_abi) as GenericRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GenericRouter {
    return new Contract(address, _abi, runner) as unknown as GenericRouter;
  }
}
