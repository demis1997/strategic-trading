/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WstETHMock,
  WstETHMockInterface,
} from "../../../../contracts/_mocks/tokens/WstETHMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20Mock",
        name: "stETH_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isSafeApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "mockBalanceOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "needToReturnValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnBoolValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "value",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setIsSafeApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setNeedToReturnValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setReturnBoolValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "perShare",
        type: "uint256",
      },
    ],
    name: "setTokenPerShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEthPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526005805463ffffff0019166201010017905560016006553480156200002857600080fd5b50604051620012cc380380620012cc8339810160408190526200004b91620000dc565b6040805180820182526006808252650eee6e88aa8960d31b6020808401829052845180860190955291845290830152906012828260036200008d8382620001b5565b5060046200009c8282620001b5565b5050600580546001600160a01b039096166401000000000263ffffff01600160c01b031990961660ff909316929092179490941790555062000281915050565b600060208284031215620000ef57600080fd5b81516001600160a01b03811681146200010757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013957607f821691505b6020821081036200015a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b0576000816000526020600020601f850160051c810160208610156200018b5750805b601f850160051c820191505b81811015620001ac5782815560010162000197565b5050505b505050565b81516001600160401b03811115620001d157620001d16200010e565b620001e981620001e2845462000124565b8462000160565b602080601f831160018114620002215760008415620002085750858301515b600019600386901b1c1916600185901b178555620001ac565b600085815260208120601f198616915b82811015620002525788860151825594840194600190910190840162000231565b5085821015620002715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61103b80620002916000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636ebcf607116100f9578063a457c2d711610097578063cf787f7911610071578063cf787f79146103f3578063d98a05611461041f578063dd62ed3e14610433578063ea598cb01461046c57600080fd5b8063a457c2d71461039a578063a9059cbb146103ad578063c1fe3e48146103c057600080fd5b806379cc6790116100d357806379cc6790146103525780637a1395aa146103655780639576a0c81461038957806395d89b411461039257600080fd5b80636ebcf607146102f657806370a082311461031657806375216a2f1461033f57600080fd5b80632dbcb32b11610166578063395093511161014057806339509351146102ab57806339a93077146102be5780633f06b907146102d157806340c10f19146102e357600080fd5b80632dbcb32b14610242578063313ce5671461026c57806335df40f21461028157600080fd5b8063035faf82146101ae57806306fdde03146101c5578063095ea7b3146101da57806318160ddd146101fd57806323b872dd14610205578063257224ab14610218575b600080fd5b6006545b6040519081526020015b60405180910390f35b6101cd61047f565b6040516101bc9190610dd2565b6101ed6101e8366004610e3d565b610511565b60405190151581526020016101bc565b6002546101b2565b6101ed610213366004610e67565b6105cf565b610240610226366004610eb4565b600580549115156101000261ff0019909216919091179055565b005b610240610250366004610e3d565b6001600160a01b03909116600090815260208190526040902055565b60055460405160ff90911681526020016101bc565b61024061028f366004610eb4565b60058054911515620100000262ff000019909216919091179055565b6101ed6102b9366004610e3d565b610628565b6102406102cc366004610ed1565b600655565b6005546101ed90610100900460ff1681565b6102406102f1366004610e3d565b610664565b6101b2610304366004610eea565b60006020819052908152604090205481565b6101b2610324366004610eea565b6001600160a01b031660009081526020819052604090205490565b6005546101ed9062010000900460ff1681565b610240610360366004610e3d565b610672565b610240610373366004610f05565b6005805460ff191660ff92909216919091179055565b6101b260065481565b6101cd61067c565b6101ed6103a8366004610e3d565b61068b565b6101ed6103bb366004610e3d565b61071f565b6005546103db9064010000000090046001600160a01b031681565b6040516001600160a01b0390911681526020016101bc565b610240610401366004610eb4565b6005805491151563010000000263ff00000019909216919091179055565b6005546101ed906301000000900460ff1681565b6101b2610441366004610f28565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b261047a366004610ed1565b610759565b60606003805461048e90610f5b565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90610f5b565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b60055460009062010000900460ff1680156105345750600554610100900460ff16155b15610541575060006105c9565b60055462010000900460ff16801561056257506005546301000000900460ff165b801561056d57508115155b801561059b57503360009081526001602090815260408083206001600160a01b038716845290915290205415155b156105a8575060006105c9565b6105b283836107f9565b5060055462010000900460ff166105c557005b5060015b92915050565b60055460009062010000900460ff1680156105f25750600554610100900460ff16155b156105ff57506000610621565b61060a848484610806565b5060055462010000900460ff1661061d57005b5060015b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105c591859061065f908690610fab565b6108b0565b61066e82826109d5565b5050565b61066e8282610ab4565b60606004805461048e90610f5b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61061d33858584036108b0565b60055460009062010000900460ff1680156107425750600554610100900460ff16155b1561074f575060006105c9565b6105b28383610bfa565b6000806006548361076a9190610fbe565b6005546040516323b872dd60e01b81523360048201523060248201526044810186905291925064010000000090046001600160a01b0316906323b872dd906064016020604051808303816000875af11580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190610fd5565b506105c93382610664565b60006105c53384846108b0565b6000610813848484610c03565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156108985760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610709565b6108a585338584036108b0565b506001949350505050565b6001600160a01b0383166109125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610709565b6001600160a01b0382166109735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610709565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610a2b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610709565b8060026000828254610a3d9190610fab565b90915550506001600160a01b03821660009081526020819052604081208054839290610a6a908490610fab565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b145760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610709565b6001600160a01b03821660009081526020819052604090205481811015610b885760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610709565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bb7908490610ff2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109c8565b60006105c53384845b6001600160a01b038316610c675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610709565b6001600160a01b038216610cc95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610709565b6001600160a01b03831660009081526020819052604090205481811015610d415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610709565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d78908490610fab565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dc491815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b81811015610e0057858101830151858201604001528201610de4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610e3857600080fd5b919050565b60008060408385031215610e5057600080fd5b610e5983610e21565b946020939093013593505050565b600080600060608486031215610e7c57600080fd5b610e8584610e21565b9250610e9360208501610e21565b9150604084013590509250925092565b8015158114610eb157600080fd5b50565b600060208284031215610ec657600080fd5b813561062181610ea3565b600060208284031215610ee357600080fd5b5035919050565b600060208284031215610efc57600080fd5b61062182610e21565b600060208284031215610f1757600080fd5b813560ff8116811461062157600080fd5b60008060408385031215610f3b57600080fd5b610f4483610e21565b9150610f5260208401610e21565b90509250929050565b600181811c90821680610f6f57607f821691505b602082108103610f8f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105c9576105c9610f95565b80820281158282048414176105c9576105c9610f95565b600060208284031215610fe757600080fd5b815161062181610ea3565b818103818111156105c9576105c9610f9556fea2646970667358221220d486adf6c36bc29c34eb6ff6ce6aaf0bbfb8e8c9d7fad7d609bc1c1924cf644364736f6c63430008180033";

type WstETHMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WstETHMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WstETHMock__factory extends ContractFactory {
  constructor(...args: WstETHMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    stETH_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(stETH_, overrides || {});
  }
  override deploy(
    stETH_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(stETH_, overrides || {}) as Promise<
      WstETHMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WstETHMock__factory {
    return super.connect(runner) as WstETHMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WstETHMockInterface {
    return new Interface(_abi) as WstETHMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WstETHMock {
    return new Contract(address, _abi, runner) as unknown as WstETHMock;
  }
}
