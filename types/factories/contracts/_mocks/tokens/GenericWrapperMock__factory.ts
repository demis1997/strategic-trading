/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  GenericWrapperMock,
  GenericWrapperMockInterface,
} from "../../../../contracts/_mocks/tokens/GenericWrapperMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidToken_",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountToReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expectToFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isSafeApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "mockBalanceOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "needToReturnValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnBoolValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToReturn_",
        type: "uint256",
      },
    ],
    name: "setAmountToReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "value",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value_",
        type: "bool",
      },
    ],
    name: "setExpectToFail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setIsSafeApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setNeedToReturnValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setReturnBoolValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526005805463ffffff001916620101001790553480156200002357600080fd5b50604051620016e1380380620016e183398101604081905262000046916200017b565b82828282826003620000598382620002b0565b506004620000688282620002b0565b5050600580546001600160a01b039099166401000000000263ffffff01600160c01b031990991660ff909316929092179790971790555050633ade68b1600655506200037c92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000db57600080fd5b81516001600160401b0380821115620000f857620000f8620000b3565b604051601f8301601f19908116603f01168101908282118183101715620001235762000123620000b3565b81604052838152602092508660208588010111156200014157600080fd5b600091505b8382101562000165578582018301518183018401529082019062000146565b6000602085830101528094505050505092915050565b600080600080608085870312156200019257600080fd5b84516001600160a01b0381168114620001aa57600080fd5b60208601519094506001600160401b0380821115620001c857600080fd5b620001d688838901620000c9565b94506040870151915080821115620001ed57600080fd5b50620001fc87828801620000c9565b925050606085015160ff811681146200021457600080fd5b939692955090935050565b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ab576000816000526020600020601f850160051c81016020861015620002865750805b601f850160051c820191505b81811015620002a75782815560010162000292565b5050505b505050565b81516001600160401b03811115620002cc57620002cc620000b3565b620002e481620002dd84546200021f565b846200025b565b602080601f8311600181146200031c5760008415620003035750858301515b600019600386901b1c1916600185901b178555620002a7565b600085815260208120601f198616915b828110156200034d578886015182559484019460019091019084016200032c565b50858210156200036c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611355806200038c6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806375216a2f11610104578063c128f75d116100a2578063de0e9a3e11610071578063de0e9a3e146104a0578063e5005901146104b3578063ea598cb0146104bc578063feaa0994146104cf57600080fd5b8063c128f75d1461041a578063cf787f7914610427578063d98a056114610453578063dd62ed3e1461046757600080fd5b806395d89b41116100de57806395d89b41146103cb5780639f95f8c1146103d3578063a457c2d7146103f4578063a9059cbb1461040757600080fd5b806375216a2f1461038157806379cc6790146103945780637a1395aa146103a757600080fd5b806335df40f21161017157806340c10f191161014b57806340c10f19146102f257806366cd5dc7146103055780636ebcf6071461033857806370a082311461035857600080fd5b806335df40f2146102a357806339509351146102cd5780633f06b907146102e057600080fd5b806323b872dd116101ad57806323b872dd14610227578063257224ab1461023a5780632dbcb32b14610264578063313ce5671461028e57600080fd5b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610215575b600080fd5b6101dc6104e2565b6040516101e991906110ea565b60405180910390f35b610205610200366004611155565b610574565b60405190151581526020016101e9565b6002545b6040519081526020016101e9565b61020561023536600461117f565b610632565b6102626102483660046111cc565b600580549115156101000261ff0019909216919091179055565b005b610262610272366004611155565b6001600160a01b03909116600090815260208190526040902055565b60055460405160ff90911681526020016101e9565b6102626102b13660046111cc565b60058054911515620100000262ff000019909216919091179055565b6102056102db366004611155565b61068b565b60055461020590610100900460ff1681565b610262610300366004611155565b6106c7565b6005546103209064010000000090046001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102196103463660046111e9565b60006020819052908152604090205481565b6102196103663660046111e9565b6001600160a01b031660009081526020819052604090205490565b6005546102059062010000900460ff1681565b6102626103a2366004611155565b6106d5565b6102626103b5366004611204565b6005805460ff191660ff92909216919091179055565b6101dc6106df565b6102626103e13660046111cc565b6007805460ff1916911515919091179055565b610205610402366004611155565b6106ee565b610205610415366004611155565b610782565b6007546102059060ff1681565b6102626104353660046111cc565b6005805491151563010000000263ff00000019909216919091179055565b600554610205906301000000900460ff1681565b610219610475366004611227565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102196104ae36600461125a565b6107bc565b61021960065481565b6102196104ca36600461125a565b610a03565b6102626104dd36600461125a565b600655565b6060600380546104f190611273565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90611273565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b5050505050905090565b60055460009062010000900460ff1680156105975750600554610100900460ff16155b156105a45750600061062c565b60055462010000900460ff1680156105c557506005546301000000900460ff165b80156105d057508115155b80156105fe57503360009081526001602090815260408083206001600160a01b038716845290915290205415155b1561060b5750600061062c565b6106158383610b11565b5060055462010000900460ff1661062857005b5060015b92915050565b60055460009062010000900460ff1680156106555750600554610100900460ff16155b1561066257506000610684565b61066d848484610b1e565b5060055462010000900460ff1661068057005b5060015b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106289185906106c29086906112c3565b610bc8565b6106d18282610ced565b5050565b6106d18282610dcc565b6060600480546104f190611273565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6106803385858403610bc8565b60055460009062010000900460ff1680156107a55750600554610100900460ff16155b156107b25750600061062c565b6106158383610f12565b60075460009060ff16156108045760405162461bcd60e51b815260206004820152600f60248201526e1d5b9ddc985c081c995d995c9d1959608a1b604482015260640161076c565b6000600654633ade68b103610819578261081d565b6006545b9050806000036108305750600092915050565b6005546040516370a0823160e01b81523060048201526401000000009091046001600160a01b0316906370a0823190602401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a391906112d6565b8111156108f25760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f756768206c6971756964546f6b656e20746f2072657475726e604482015260640161076c565b306323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303816000875af115801561094c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097091906112ef565b5060055464010000000090046001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af11580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc91906112ef565b5092915050565b60075460009060ff1615610a495760405162461bcd60e51b815260206004820152600d60248201526c1ddc985c081c995d995c9d1959609a1b604482015260640161076c565b6000600654633ade68b103610a5e5782610a62565b6006545b905080600003610a755750600092915050565b60055464010000000090046001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018690526064016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0691906112ef565b5061062c33826106c7565b6000610628338484610bc8565b6000610b2b848484610f1b565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610bb05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161076c565b610bbd8533858403610bc8565b506001949350505050565b6001600160a01b038316610c2a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161076c565b6001600160a01b038216610c8b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161076c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610d435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161076c565b8060026000828254610d5591906112c3565b90915550506001600160a01b03821660009081526020819052604081208054839290610d829084906112c3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610e2c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161076c565b6001600160a01b03821660009081526020819052604090205481811015610ea05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161076c565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ecf90849061130c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ce0565b60006106283384845b6001600160a01b038316610f7f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161076c565b6001600160a01b038216610fe15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161076c565b6001600160a01b038316600090815260208190526040902054818110156110595760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161076c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906110909084906112c3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110dc91815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b81811015611118578581018301518582016040015282016110fc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461115057600080fd5b919050565b6000806040838503121561116857600080fd5b61117183611139565b946020939093013593505050565b60008060006060848603121561119457600080fd5b61119d84611139565b92506111ab60208501611139565b9150604084013590509250925092565b80151581146111c957600080fd5b50565b6000602082840312156111de57600080fd5b8135610684816111bb565b6000602082840312156111fb57600080fd5b61068482611139565b60006020828403121561121657600080fd5b813560ff8116811461068457600080fd5b6000806040838503121561123a57600080fd5b61124383611139565b915061125160208401611139565b90509250929050565b60006020828403121561126c57600080fd5b5035919050565b600181811c9082168061128757607f821691505b6020821081036112a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561062c5761062c6112ad565b6000602082840312156112e857600080fd5b5051919050565b60006020828403121561130157600080fd5b8151610684816111bb565b8181038181111561062c5761062c6112ad56fea2646970667358221220d9923c00c87fc1c96fb9a37106481bb1671682d444970b212cf0f11e82b9a48364736f6c63430008180033";

type GenericWrapperMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericWrapperMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericWrapperMock__factory extends ContractFactory {
  constructor(...args: GenericWrapperMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    liquidToken_: AddressLike,
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      liquidToken_,
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override deploy(
    liquidToken_: AddressLike,
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      liquidToken_,
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<
      GenericWrapperMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GenericWrapperMock__factory {
    return super.connect(runner) as GenericWrapperMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericWrapperMockInterface {
    return new Interface(_abi) as GenericWrapperMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GenericWrapperMock {
    return new Contract(address, _abi, runner) as unknown as GenericWrapperMock;
  }
}
