/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVaultsRegistry,
  IVaultsRegistryInterface,
} from "../../../contracts/interfaces/IVaultsRegistry";

const _abi = [
  {
    inputs: [],
    name: "DefaultFeeRateError",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedVaultDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "target",
        type: "string",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeRate",
        type: "uint256",
      },
    ],
    name: "DefaultFeeRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "VaultImplementationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "VaultStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress_",
        type: "address",
      },
    ],
    name: "isVaultActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVaultsRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultsRegistryInterface {
    return new Interface(_abi) as IVaultsRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVaultsRegistry {
    return new Contract(address, _abi, runner) as unknown as IVaultsRegistry;
  }
}
