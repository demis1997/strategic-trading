export declare const constants: {
    MAINNET: {
        uniswapRouter: string;
        uniswapQuoterV2: string;
        lidoImplementation: string;
        lidoStEth: string;
        lidoWstEth: string;
        weth: string;
        etherfi_weEth: string;
        etherfi_eEth: string;
        etherfi_liquifier: string;
        kelp_deposit: string;
        kelp_rsEth: string;
        rocket_deposit: string;
        rocket_rETH: string;
        rocket_deposit_settings: string;
        stader_stake_manager: string;
        stader_ETHx: string;
        stEth_eth_feed: string;
        weEth_eth_feed: string;
        wsEth_weth_uni_pool: string;
        weEth_weth_uni_pool: string;
        rsEth_weth_uni_pool: string;
        ETHx_weth_uni_pool: string;
        renzo_liquifier: string;
        renzo_ezEth: string;
        one_inch: string;
        price_stEth_in_eth: string;
    };
    SEPOLIA: {
        uniswapRouter: string;
        uniswapQuoterV2: string;
        lidoImplementation: string;
        lidoStEth: string;
        lidoWstEth: string;
        weth: string;
        etherfi_weEth: string;
        etherfi_eEth: string;
        etherfi_liquifier: string;
        kelp_deposit: string;
        kelp_rsEth: string;
        rocket_deposit: string;
        rocket_rETH: string;
        rocket_deposit_settings: string;
        stader_stake_manager: string;
        stader_ETHx: string;
        stEth_eth_feed: string;
        weEth_eth_feed: string;
        wsEth_weth_uni_pool: string;
        weEth_weth_uni_pool: string;
        rsEth_weth_uni_pool: string;
        ETHx_weth_uni_pool: string;
        price_stEth_in_eth: string;
    };
};
export declare const deployedContracts: {
    MAINNET: {
        masterToken: string;
        vaultRegistry: string;
        vaultSimpleStaking: string;
        strSimpleStrategy: string;
        wSimpleStrategy: string;
        lidoAdapter: string;
        uniswapAdapter: string;
        protocolMock: string;
        oracleMock: string;
    };
    SEPOLIA: {
        masterToken: string;
        vaultRegistry: string;
        vaultSimpleStaking: string;
        strSimpleStrategy: string;
        wSimpleStrategy: string;
        lidoAdapter: string;
        uniswapAdapter: string;
        protocolMock: string;
        oracleMock: string;
    };
};
//# sourceMappingURL=_deployAddresses.d.ts.map